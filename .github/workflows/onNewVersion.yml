name: OnPushNewVersion

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      RELEASE_VERSION: ${{ github.ref_name }}
      ARCH_X64: amd64
      ARCH_ARM: arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: master

      - name: Download native artifacts
        run: |
          wget --ftp-user="${{ secrets.FTP_USER }}" --ftp-password="${{ secrets.FTP_PASSWORD }}" \
            ftp://ftp.impleotv.com/misbcoresdk/Native/Windows-x64/* -P Windows-x64
          wget --ftp-user="${{ secrets.FTP_USER }}" --ftp-password="${{ secrets.FTP_PASSWORD }}" \
            ftp://ftp.impleotv.com/misbcoresdk/Native/Linux-x64/* -P Linux-x64
          wget --ftp-user="${{ secrets.FTP_USER }}" --ftp-password="${{ secrets.FTP_PASSWORD }}" \
            ftp://ftp.impleotv.com/misbcoresdk/Native/Linux-arm64/* -P Linux-arm64
          wget --ftp-user="${{ secrets.FTP_USER }}" --ftp-password="${{ secrets.FTP_PASSWORD }}" \
            ftp://ftp.impleotv.com/misbcoresdk/Native/Demo/* -P Demo
          wget --ftp-user="${{ secrets.FTP_USER }}" --ftp-password="${{ secrets.FTP_PASSWORD }}" \
            ftp://ftp.impleotv.com/misbcoresdk/Native/Doc/CHANGELOG.md -O CHANGELOG.md

      # ——— WINDOWS ZIP ———
      - name: Zip file for windows-x64
        uses: papeloto/action-zip@v1
        with:
          files: Windows-x64/libmisbcore.dll
          dest: dist/libmisbcore-windows-x64.zip

      # ——— DEBIAN PACKAGES ———
      - name: Install FPM
        run: |
          sudo apt-get update
          sudo apt-get install -y ruby ruby-dev build-essential
          sudo gem install --no-document fpm

      - name: Build .deb for ${{ env.ARCH_X64 }}
        run: |
          VER="${RELEASE_VERSION#v}"
          mkdir -p pkg/${ARCH_X64}/usr/lib/misbcore
          cp Linux-x64/libmisbcore.so pkg/${ARCH_X64}/usr/lib/misbcore/libmisbcore.so
          fpm -s dir -t deb \
            -n libmisbcore \
            -v "$VER" \
            --architecture="${ARCH_X64}" \
            --prefix /usr/lib/misbcore \
            pkg/${ARCH_X64}
          mv libmisbcore_"$VER"_"${ARCH_X64}".deb dist/

      - name: Build .deb for ${{ env.ARCH_ARM }}
        run: |
          VER="${RELEASE_VERSION#v}"
          mkdir -p pkg/${ARCH_ARM}/usr/lib/misbcore
          cp Linux-arm64/libmisbcore.so pkg/${ARCH_ARM}/usr/lib/misbcore/libmisbcore.so
          fpm -s dir -t deb \
            -n libmisbcore \
            -v "$VER" \
            --architecture="${ARCH_ARM}" \
            --prefix /usr/lib/misbcore \
            pkg/${ARCH_ARM}
          mv libmisbcore_"$VER"_"${ARCH_ARM}".deb dist/

      # ——— NODE.JS README GENERATION ———
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '14.x'

      - name: Cache & install JS deps
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-js-${{ hashFiles('package-lock.json') }}

      - name: Generate README
        run: |
          npm install
          node index.js "${RELEASE_VERSION}"

      - name: Commit updated docs
        uses: EndBug/add-and-commit@v9
        with:
          add: '.'
          push: true
          message: "Docs for ${RELEASE_VERSION}"

      # ——— UPLOAD ALL RELEASE ASSETS ———
      - name: Upload Windows ZIP
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: dist/libmisbcore-windows-x64.zip
          asset_name: libmisbcore_${{ env.RELEASE_VERSION }}_win-x64.zip
          tag: ${{ github.ref }}
          overwrite: true

      - name: Upload AMD64 .deb
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: dist/libmisbcore_*_${{ env.ARCH_X64 }}.deb
          asset_name: libmisbcore_${{ env.RELEASE_VERSION }}_${{ env.ARCH_X64 }}.deb
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true

      - name: Upload ARM64 .deb
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: dist/libmisbcore_*_${{ env.ARCH_ARM }}.deb
          asset_name: libmisbcore_${{ env.RELEASE_VERSION }}_${{ env.ARCH_ARM }}.deb
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true
